// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Struct.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protocol {

  /// <summary>Holder for reflection information generated from Struct.proto</summary>
  public static partial class StructReflection {

    #region Descriptor
    /// <summary>File descriptor for Struct.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StructReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxTdHJ1Y3QucHJvdG8SCFByb3RvY29sGgpFbnVtLnByb3RvIlIKCFVzZXJE",
            "YXRhEg8KB3VzZXJVSUQYASABKAQSJAoIYXV0aFR5cGUYAiABKA4yEi5Qcm90",
            "b2NvbC5BdXRoVHlwZRIPCgdhdXRoS2V5GAMgASgJIlEKC0FjY291bnREYXRh",
            "Eg8KB3VzZXJVSUQYASABKAQSEgoKYWNjb3VudFVJRBgCIAEoDRIQCghuaWNr",
            "TmFtZRgDIAEoCRILCgNleHAYBCABKA0iWgoKT2JqZWN0SW5mbxIQCghvYmpl",
            "Y3RJRBgBIAEoDRIMCgRuYW1lGAIgASgJEiwKDHBvc2l0aW9uSW5mbxgDIAEo",
            "CzIWLlByb3RvY29sLlBvc2l0aW9uSW5mbyJ2CgxQb3NpdGlvbkluZm8SJgoF",
            "c3RhdGUYASABKA4yFy5Qcm90b2NvbC5DcmVhdHVyZVN0YXRlEiIKB21vdmVE",
            "aXIYAiABKA4yES5Qcm90b2NvbC5Nb3ZlRGlyEgwKBHBvc1gYAyABKAUSDAoE",
            "cG9zWRgEIAEoBSIcCglTa2lsbEluZm8SDwoHc2tpbGxJRBgBIAEoBWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Protocol.EnumReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.UserData), global::Protocol.UserData.Parser, new[]{ "UserUID", "AuthType", "AuthKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.AccountData), global::Protocol.AccountData.Parser, new[]{ "UserUID", "AccountUID", "NickName", "Exp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.ObjectInfo), global::Protocol.ObjectInfo.Parser, new[]{ "ObjectID", "Name", "PositionInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.PositionInfo), global::Protocol.PositionInfo.Parser, new[]{ "State", "MoveDir", "PosX", "PosY" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.SkillInfo), global::Protocol.SkillInfo.Parser, new[]{ "SkillID" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UserData : pb::IMessage<UserData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserData> _parser = new pb::MessageParser<UserData>(() => new UserData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.StructReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserData(UserData other) : this() {
      userUID_ = other.userUID_;
      authType_ = other.authType_;
      authKey_ = other.authKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserData Clone() {
      return new UserData(this);
    }

    /// <summary>Field number for the "userUID" field.</summary>
    public const int UserUIDFieldNumber = 1;
    private ulong userUID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserUID {
      get { return userUID_; }
      set {
        userUID_ = value;
      }
    }

    /// <summary>Field number for the "authType" field.</summary>
    public const int AuthTypeFieldNumber = 2;
    private global::Protocol.AuthType authType_ = global::Protocol.AuthType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.AuthType AuthType {
      get { return authType_; }
      set {
        authType_ = value;
      }
    }

    /// <summary>Field number for the "authKey" field.</summary>
    public const int AuthKeyFieldNumber = 3;
    private string authKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthKey {
      get { return authKey_; }
      set {
        authKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserUID != other.UserUID) return false;
      if (AuthType != other.AuthType) return false;
      if (AuthKey != other.AuthKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserUID != 0UL) hash ^= UserUID.GetHashCode();
      if (AuthType != global::Protocol.AuthType.None) hash ^= AuthType.GetHashCode();
      if (AuthKey.Length != 0) hash ^= AuthKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserUID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserUID);
      }
      if (AuthType != global::Protocol.AuthType.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AuthType);
      }
      if (AuthKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AuthKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserUID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserUID);
      }
      if (AuthType != global::Protocol.AuthType.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AuthType);
      }
      if (AuthKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AuthKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserUID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserUID);
      }
      if (AuthType != global::Protocol.AuthType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AuthType);
      }
      if (AuthKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserData other) {
      if (other == null) {
        return;
      }
      if (other.UserUID != 0UL) {
        UserUID = other.UserUID;
      }
      if (other.AuthType != global::Protocol.AuthType.None) {
        AuthType = other.AuthType;
      }
      if (other.AuthKey.Length != 0) {
        AuthKey = other.AuthKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserUID = input.ReadUInt64();
            break;
          }
          case 16: {
            AuthType = (global::Protocol.AuthType) input.ReadEnum();
            break;
          }
          case 26: {
            AuthKey = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserUID = input.ReadUInt64();
            break;
          }
          case 16: {
            AuthType = (global::Protocol.AuthType) input.ReadEnum();
            break;
          }
          case 26: {
            AuthKey = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AccountData : pb::IMessage<AccountData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccountData> _parser = new pb::MessageParser<AccountData>(() => new AccountData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.StructReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountData(AccountData other) : this() {
      userUID_ = other.userUID_;
      accountUID_ = other.accountUID_;
      nickName_ = other.nickName_;
      exp_ = other.exp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountData Clone() {
      return new AccountData(this);
    }

    /// <summary>Field number for the "userUID" field.</summary>
    public const int UserUIDFieldNumber = 1;
    private ulong userUID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserUID {
      get { return userUID_; }
      set {
        userUID_ = value;
      }
    }

    /// <summary>Field number for the "accountUID" field.</summary>
    public const int AccountUIDFieldNumber = 2;
    private uint accountUID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccountUID {
      get { return accountUID_; }
      set {
        accountUID_ = value;
      }
    }

    /// <summary>Field number for the "nickName" field.</summary>
    public const int NickNameFieldNumber = 3;
    private string nickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 4;
    private uint exp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserUID != other.UserUID) return false;
      if (AccountUID != other.AccountUID) return false;
      if (NickName != other.NickName) return false;
      if (Exp != other.Exp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserUID != 0UL) hash ^= UserUID.GetHashCode();
      if (AccountUID != 0) hash ^= AccountUID.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (Exp != 0) hash ^= Exp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserUID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserUID);
      }
      if (AccountUID != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(AccountUID);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NickName);
      }
      if (Exp != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Exp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserUID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserUID);
      }
      if (AccountUID != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(AccountUID);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NickName);
      }
      if (Exp != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Exp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserUID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserUID);
      }
      if (AccountUID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountUID);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (Exp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Exp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountData other) {
      if (other == null) {
        return;
      }
      if (other.UserUID != 0UL) {
        UserUID = other.UserUID;
      }
      if (other.AccountUID != 0) {
        AccountUID = other.AccountUID;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.Exp != 0) {
        Exp = other.Exp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserUID = input.ReadUInt64();
            break;
          }
          case 16: {
            AccountUID = input.ReadUInt32();
            break;
          }
          case 26: {
            NickName = input.ReadString();
            break;
          }
          case 32: {
            Exp = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserUID = input.ReadUInt64();
            break;
          }
          case 16: {
            AccountUID = input.ReadUInt32();
            break;
          }
          case 26: {
            NickName = input.ReadString();
            break;
          }
          case 32: {
            Exp = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjectInfo : pb::IMessage<ObjectInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjectInfo> _parser = new pb::MessageParser<ObjectInfo>(() => new ObjectInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.StructReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectInfo(ObjectInfo other) : this() {
      objectID_ = other.objectID_;
      name_ = other.name_;
      positionInfo_ = other.positionInfo_ != null ? other.positionInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectInfo Clone() {
      return new ObjectInfo(this);
    }

    /// <summary>Field number for the "objectID" field.</summary>
    public const int ObjectIDFieldNumber = 1;
    private uint objectID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ObjectID {
      get { return objectID_; }
      set {
        objectID_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "positionInfo" field.</summary>
    public const int PositionInfoFieldNumber = 3;
    private global::Protocol.PositionInfo positionInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.PositionInfo PositionInfo {
      get { return positionInfo_; }
      set {
        positionInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectID != other.ObjectID) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(PositionInfo, other.PositionInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectID != 0) hash ^= ObjectID.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (positionInfo_ != null) hash ^= PositionInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ObjectID != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ObjectID);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (positionInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PositionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ObjectID != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ObjectID);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (positionInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PositionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ObjectID);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (positionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositionInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectInfo other) {
      if (other == null) {
        return;
      }
      if (other.ObjectID != 0) {
        ObjectID = other.ObjectID;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.positionInfo_ != null) {
        if (positionInfo_ == null) {
          PositionInfo = new global::Protocol.PositionInfo();
        }
        PositionInfo.MergeFrom(other.PositionInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectID = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (positionInfo_ == null) {
              PositionInfo = new global::Protocol.PositionInfo();
            }
            input.ReadMessage(PositionInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ObjectID = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (positionInfo_ == null) {
              PositionInfo = new global::Protocol.PositionInfo();
            }
            input.ReadMessage(PositionInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PositionInfo : pb::IMessage<PositionInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PositionInfo> _parser = new pb::MessageParser<PositionInfo>(() => new PositionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PositionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.StructReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionInfo(PositionInfo other) : this() {
      state_ = other.state_;
      moveDir_ = other.moveDir_;
      posX_ = other.posX_;
      posY_ = other.posY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionInfo Clone() {
      return new PositionInfo(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::Protocol.CreatureState state_ = global::Protocol.CreatureState.Idle;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.CreatureState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "moveDir" field.</summary>
    public const int MoveDirFieldNumber = 2;
    private global::Protocol.MoveDir moveDir_ = global::Protocol.MoveDir.Up;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.MoveDir MoveDir {
      get { return moveDir_; }
      set {
        moveDir_ = value;
      }
    }

    /// <summary>Field number for the "posX" field.</summary>
    public const int PosXFieldNumber = 3;
    private int posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PosX {
      get { return posX_; }
      set {
        posX_ = value;
      }
    }

    /// <summary>Field number for the "posY" field.</summary>
    public const int PosYFieldNumber = 4;
    private int posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PosY {
      get { return posY_; }
      set {
        posY_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PositionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PositionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (MoveDir != other.MoveDir) return false;
      if (PosX != other.PosX) return false;
      if (PosY != other.PosY) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != global::Protocol.CreatureState.Idle) hash ^= State.GetHashCode();
      if (MoveDir != global::Protocol.MoveDir.Up) hash ^= MoveDir.GetHashCode();
      if (PosX != 0) hash ^= PosX.GetHashCode();
      if (PosY != 0) hash ^= PosY.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (State != global::Protocol.CreatureState.Idle) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (MoveDir != global::Protocol.MoveDir.Up) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MoveDir);
      }
      if (PosX != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PosX);
      }
      if (PosY != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PosY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (State != global::Protocol.CreatureState.Idle) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (MoveDir != global::Protocol.MoveDir.Up) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MoveDir);
      }
      if (PosX != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PosX);
      }
      if (PosY != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PosY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != global::Protocol.CreatureState.Idle) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (MoveDir != global::Protocol.MoveDir.Up) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MoveDir);
      }
      if (PosX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosX);
      }
      if (PosY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosY);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PositionInfo other) {
      if (other == null) {
        return;
      }
      if (other.State != global::Protocol.CreatureState.Idle) {
        State = other.State;
      }
      if (other.MoveDir != global::Protocol.MoveDir.Up) {
        MoveDir = other.MoveDir;
      }
      if (other.PosX != 0) {
        PosX = other.PosX;
      }
      if (other.PosY != 0) {
        PosY = other.PosY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = (global::Protocol.CreatureState) input.ReadEnum();
            break;
          }
          case 16: {
            MoveDir = (global::Protocol.MoveDir) input.ReadEnum();
            break;
          }
          case 24: {
            PosX = input.ReadInt32();
            break;
          }
          case 32: {
            PosY = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = (global::Protocol.CreatureState) input.ReadEnum();
            break;
          }
          case 16: {
            MoveDir = (global::Protocol.MoveDir) input.ReadEnum();
            break;
          }
          case 24: {
            PosX = input.ReadInt32();
            break;
          }
          case 32: {
            PosY = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SkillInfo : pb::IMessage<SkillInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SkillInfo> _parser = new pb::MessageParser<SkillInfo>(() => new SkillInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkillInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.StructReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillInfo(SkillInfo other) : this() {
      skillID_ = other.skillID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillInfo Clone() {
      return new SkillInfo(this);
    }

    /// <summary>Field number for the "skillID" field.</summary>
    public const int SkillIDFieldNumber = 1;
    private int skillID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillID {
      get { return skillID_; }
      set {
        skillID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkillInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkillInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SkillID != other.SkillID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SkillID != 0) hash ^= SkillID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SkillID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SkillID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SkillID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SkillID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SkillID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkillInfo other) {
      if (other == null) {
        return;
      }
      if (other.SkillID != 0) {
        SkillID = other.SkillID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SkillID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SkillID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
